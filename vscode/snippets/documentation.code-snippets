{
  "File Header": {
    "prefix": "m:doc_intro",
    "body": [
      "/*",
      "File:        $TM_FILENAME",
      "Description: $1",
      "Created:     $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND",
      "Author:      Jos√© Vilca Campana <@marcusmors>",
      "Mail:        alivezeh@gmail.com",
      "",
      // ${TM_DIRECTORY/^.+\\/(.*)$/$1/}
      // $WORKSPACE_FOLDER
      // $WORKSPACE_NAME
      "This file is part of ${2:$WORKSPACE_NAME}.",
      "${2:$WORKSPACE_NAME} is free software: you can redistribute it and/or modify",
      "it under the terms of the GNU General Public License as published by",
      "the Free Software Foundation, either version 3 of the License, or",
      "any later version.",
      "",
      "${2:$WORKSPACE_NAME} is distributed in the hope that it will be useful,",
      "but WITHOUT ANY WARRANTY; without even the implied warranty of",
      "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
      "GNU General Public License for more details.",
      "",
      "You should have received a copy of the GNU General Public License",
      "along with ${2:$WORKSPACE_NAME}.  If not, see <https://www.gnu.org/licenses/>.",
      "*/",
    ],
    "description": "Output a file header with the file name and date"
  },
  "FSF/GNU licenses": {
    "prefix": "m:FSF_GNU_licenses",
    "body": [
      "/*",
      "GPL-2.0-only or GPL-2.0-or-later",
      "GPL-3.0-only or GPL-3.0-or-later",
      "LGPL-2.0-only or LGPL-2.0-or-later",
      "LGPL-2.1-only or LGPL-2.1-or-later",
      "LGPL-3.0-only or LGPL-3.0-or-later",
      "AGPL-3.0-only or AGPL-3.0-or-later",
      "GFDL-1.3-only or GFDL-1.3-or-later",
      "*/",
    ],
    "description": "FSF/GNU licenses"
  },
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
}
