{
  "cmake basics": {
    "prefix": "mors:init",
    "body": [
      "cmake_minimum_required(VERSION 3.12)",
      "",
      "# set the project name and version",
      "project(${1:ProjectName} VERSION 1.0.0)",
      "",
      "# specify the C++ standard",
      "set(CMAKE_CXX_STANDARD ${2|11,14,17,20|})",
      "set(CMAKE_CXX_STANDARD_REQUIRED True)",
      "",
      "# configure a header file to pass some of the CMake settings to the source code",
      "configure_file(${1:ProjectName}Config.h.in ${1:ProjectName}config.h)",
      "",
      "",
      "add_executable(${1:ProjectName} main.cpp)",
      "",
      "# Since the configured file will be written into the binary tree, we must add that directory to the list of paths to search for include files.",
      "# add the binary tree to the search path for include files",
      "# so that we will find TutorialConfig.h",
      "target_include_directories(",
      "\t${1:ProjectName} ${3|PUBLIC,PRIVATE|}",
      "\t\"${PROJECT_BINARY_DIR}\"",
      "\t)",
      "",
    ],
    "description": "cmake basics",
  },
  "library": {
    "prefix": "m:lib",
    "body": [
      "",
      "# add the MathFunctions library so headers can be found",
      "add_subdirectory(${1:lib_direxecutable
    }",
      "\tmysqrt.hpp",
    "\tmysqrt.cpp",
    "\t)",
    "",
    "target_link_libraries(${2:target_executable} ${3|PUBLIC,PRIVATE|} ${1:library_executable})",
    "",
    "",
    "",
    "# add \"${PROJECT_SOURCE_DIR}/${1:lib_directory}\" to target_include_directories",
    "",
  ],
  "description": "library and target",
},
// Place your snippets for cmake here. Each snippet is defined under a snippet name and has a prefix, body and
// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
// same ids are connected.
// Example:
// "Print to console": {
// 	"prefix": "log",
// 	"body": [
// 		"console.log('$1');",
// 		"$2"
// 	],
// 	"description": "Log output to console"
// }
}
